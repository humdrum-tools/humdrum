#!/bin/sh
###################################################################
#
# TEXT
#
# Programmed by: David Huron        Date: July 11, 1995
# Copyright (c) 1995 David Huron
#
# Modifications:
#    Date:     Programmer:        	Description:
#
# This script extracts a **text spine from the input, and reformats
# the output as ordinary printed text.
#
FILENAME=""
FIELD=""
HELP=""
FLAG=""
STNDIN=""
USAGE1="USAGE: text -h                (Help Screen)"
USAGE2="       text [-f n] [file ...]"

# default TMPDIR to /tmp if not already set
TMPDIR=${TMPDIR:-/tmp}

if [ -z $HUMDRUM ]
then
   HUMDRUM=`echo $PATH | tr : '\n' | grep 'humdrum/bin$' | head -n 1 | sed 's/\/bin$//'`
fi

while getopts :hf: arg
do
	case "$arg" in
	f)	FIELD="${OPTARG}";;
	h) 	HELP="ON";;
	[?]) echo "" 1>&2
		echo "$USAGE1" 1>&2
		echo "$USAGE2" 1>&2
		exit;;
	esac
done
shift `expr $OPTIND - 1`
# If no parameters were specified, print out a help screen
if [ -n "$HELP" ]
then
	if [ -f ${HUMDRUM}/bin/helpscrn/text.hlp ]
	then
		cat ${HUMDRUM}/bin/helpscrn/text.hlp
	else
		echo "No help available on this command."
	fi
	exit
fi
# Process any remaining filenames
while [ "$#" -ne 0 ]
do
	# A '-' specifies standard input
	if [ x"$1" = x- ]
	then
		# Only one '-' may be used
		if [ -z "$STNDIN" ]
		then
			FILENAME="$FILENAME $1"
			STNDIN="ON"
			shift
		else
			shift
		fi
	elif [ -f "$1" ]
	then
		FILENAME="$FILENAME $1"
		shift
	else
		echo "text: ERROR: File not found: $1" 1>&2
		FLAG="ON"
		shift
	fi
done	
# If only invalid files specified, exit
if [ "X$FILENAME" = X -a -n "$FLAG" ]
then
	exit
fi
if [ "X$FIELD" = X ]
then
	FIELD="1"
fi

# Extract all **silbe spines.  Extract the first spine (to avoid more than one).
# Replace **silbe rests (%) and graphic hyphens (|) by null tokens.
# Eliminate leading and trailing hyphens.
# Then format the resulting text.
sh extract -i '**silbe' $FILENAME | sh extract -f $FIELD \
  | sh rend -i '**silbe' -f $HUMDRUM/bin/text.rnd > $TMPDIR/$$.cxt
sh extract -f 1 $TMPDIR/$$.cxt > $TMPDIR/$$.1xt
sh extract -f 2 $TMPDIR/$$.cxt \
  | sed 's/^%$/./; s/^|$/./; s/\*\*other/**text/g' \
  | sed 's/^-\(.*\)-$/\1/; s/^-\(.*\)\([^-]\)$/\1\2+/' \
  | sh context -b '-' -e '\+' | sh humsed 's/[- /+]//g' > $TMPDIR/$$.2xt
assemble $TMPDIR/$$.1xt $TMPDIR/$$.2xt | sh cleave -i '**text,**barlines' -o '**text'
rm $TMPDIR/$$.[12c]xt
